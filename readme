Consoldation of NAIC pipeline programs (sourced from /Desktop/programs_2/)
Written by Emma Dahl (dahlek@nmsu.edu, dahlemmak@gmail.com)
If you use this code or pipeline, please credit me! Or at least let me know you're using my programs.

Contains python scripts for the reduction and photometric/geometric calibration of hyperspectral image cubes.

These programs have been written specifically to reduce and calibrate data from the NMSU Acousto-optic Imaging Camera (NAIC) that have been obtained at the Apache Point Observatory 3.5-m telescope. However, some of these routines might prove useful for the reduction/calibration of other data sets. I included a number of user queries in Data_pipeline so that it can be ran to only flat-divide, only correct for hot pixels, etc.

This pipeline is also still a work in progress (and there are several improvements that can be made, thanks to having written a chunk of this early in my grad school career). Below are a description of the notebooks and the things on my to-do list to improve them.


Description of notebooks:
1_image_checker.ipynb - Program used to quickly examine data by looping through lists of fits files. Much of the pipeline requires input lists of individual cubes, so this notebook contains several loops that print out information and allow a user to copy and paste an image list into a new text file given a list of all images in a given folder. Routine to check for oversaturation is also here. 

Potential improvements:
-Can find way to avoid the manual copy-and-pasting of image lists to seperate cubes.


2_Data_reduction_pipeline - Corrects wavelength (if necessary), attaches ephimerides and pointing info, creates pixel mask (if necessary), corrects for hot pixels and cosmic rays, divides by exposure time, corrects for fringing (if necessary), dividies flats, subtracts RF-off images, applies Gaussian filter to flats (if necessary)

Potential improvements:
-rf_off() can probably be cleaned up a bit; there's some gratuitous variables and things. I also gave up on including pointing requirements that Paul describes in his thesis since the timing requirement seemed perfectly adequate.
-compilation programs need consistent docstrings


3_Ap_phot - Set of functions that append airmass, uses Gaussin to fit and find stars and conduct aperture photometry. 

Potential improvements:
- Is there a better way to implement the routine that fixes hot pixels in the border?
- Clean up docstring in ap_phot()
- Lots of print statements and comments in ap_phot() that might be unnecessary
- Make sure SNR is being measured correctly


4_Tau_flux_fit - Uses the flux of calstars, as found by Ap_phot, to derive the optical depth of the atmosphere as a function of wavelength, and the flux of those stars at the top of the atmsophere.

Potential improvements:
- add rest of program to notebook on git
- Needs to be generalized before pushing to github.
- Better docstrings for individual functions
- Is it a safe assumption that Vega's magnitude is constant?
- Fix dictionary loops now that they're ordered
- Clean up F_top_finder - dictionaries get a little messy

Further general improvements that are forthcoming:
-Converting to Python 3
-Code that is usable outside of python notebooks 

